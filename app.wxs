module.exports = {
  cardNumber: function (str) {
    if (str) {
      var lengths = str.length
      var newStr = ''
      console.log(str, lengths)
      for (var i = 0; i < lengths; i++) {
        if (i > 3 && i < lengths - 4) {
          newStr += '*'
        } else {
          newStr += str[i]
        }
      }
      return newStr;
    }
  },
  price: function (str) {
    if (str) {
      return Number(str).toFixed(2)
    }
  },
  timeToString: function (str) {
    console.log(str)
    if (str) {
      // return str.replace(/^(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})$/, "$1-$2-$3 $4:$5:$6")
    }
  },

  // 把负数转换为正数
  minNumber: function (str) {
    // console.log(str)
    if (str) {
      return -str
    } else {
      return 0
    }
  },
  getTotal: function (item) {
    return (item.price * item.quantity - item.discountAmount).toFixed(2)
  },

  //今日实收金额和昨日实收金额的占比
  contrast: function (item, item2, type) {
    // type为1时代表总计
    var contrast = 0
    if (type == 1) {
      // console.log(item,item2)
      if (item2) {
        contrast = (((item - item2) / item2) * 100).toFixed(2)
      } else {
        contrast = ""
      }
    } else {
      if (item.yesterdayTradeAmt) {
        contrast = (((item.todayTradeAmt - item.yesterdayTradeAmt) / item.yesterdayTradeAmt) * 100).toFixed(2)
      } else {
        contrast = "nothing"
      }
    }

    return contrast
  },
  // 计算分组的总计金额
  groupTotal: function (data, type, status) {
    // 1计算总金额、2计算总比数、3计算百分比
    var total = 0
    if (type == 1) {
      if (status) {
        for (var i = 0; i < data.length; i++) {
          total += data[i].yesterdayTradeAmt
        }
      } else {
        for (var i = 0; i < data.length; i++) {
          total += data[i].todayTradeAmt
        }
      }
      total = Number(total.toFixed(2))
    }
    if (type == 2) {
      if (status) {
        for (var i = 0; i < data.length; i++) {
          total += data[i].yesterdayOrderCnt
        }
      } else {
        for (var i = 0; i < data.length; i++) {
          total += data[i].todayOrderCnt
        }
      }
    }
    if (type == 3) {
      var before = 0,
        yesterday = 0
      for (var i = 0; i < data.length; i++) {
        yesterday += data[i].yesterdayTradeAmt
        before += data[i].beforeYesterdayTradeAmt
      }
      if (before) {
        total = Number((((yesterday - before) / before) * 100).toFixed(2))
      } else {
        total = ""
      }
    }
    return total
  },

  //商品汇总总数据占比
  goodsCollectTotalData: function (data, type) {
    // 1销售额占比、2毛利额占比
    var ratio = 0
    if (type == 1 && data.totalSalesAmt != 0) {
      ratio = (data.categorySalesAmt / data.totalSalesAmt * 100).toFixed(2)
    } else if (type == 2 && data.totalGrossProfit != 0) {
      ratio = (data.categoryGrossProfit / data.totalGrossProfit * 100).toFixed(2)
    }
    return ratio
  },

  //结算结算金额
  amount: function (data) {
    var amount = (data.totalSettleAmt - data.cashTradeAmt - data.posSettleAmt - data.memberTradeAmt).toFixed(2)
    return amount
  },

  // 字符串转换为数组
  strTurnArray: function (str) {
    var array = str.split(",")
    return array.length
  },

  //退还金额
  refundMoney: function (data) {
    var money = (data.totalAmount - data.receiptAmount).toFixed(2)
    return money
  },

  //退款金额
  refundTotalMoney: function (data) {
    var total = 0
    for (var i = 0; i < data.length; i++) {
      total += data[i].refundAmount
    }
    return -total
  },

  //外卖自提判断配送状态
  devliveryStatus: function (data) {
    var status = ""
    if (data.deliveryType == 0) {
      switch (data.deliveryStatus) {
        case 0:
          status = "待接单"
          break;
        case 3:
          status = "商家自配送中"
          break;
        case 4:
          status = "已完成"
          break;
        case 5:
          status = "配送取消"
          break;
        case 6:
          status = "配送失败"
          break;
        case 7:
          status = "商品返还商家中"
          break;
        case 8:
          status = "商品返还商家成功"
          break;
        case 9:
          status = "待接单"
          break;
      }
    } else if (data.deliveryType == 1) {
      switch (data.deliveryStatus) {
        case 0:
          status = "到店自提"
          break;
        case 2:
          status = "待自提"
          break;
        case 4:
          status = "顾客已取餐"
          break;
        case 5:
          status = "已取消"
          break;
      }
    } else if (data.deliveryType == 2) {
      switch (data.deliveryStatus) {
        case 0:
          status = "骑手待接单"
          break;
        case 2:
          status = "骑手待取货"
          break;
        case 3:
          status = "骑手配送中"
          break;
        case 4:
          status = "已完成"
          break;
        case 5:
          status = "配送取消"
          break;
        case 6:
          status = "配送失败"
          break;
      }
    }
    return status
  },

  // 把商品连接成字符串
  goodsStr: function (data) {
    var str = ''
    for (var i = 0; i < data.length; i++) {
      str += data[i].goodsName + '*' + data[i].goodsQuantity + ','
    }
    return '[' + str.slice(0, -1) + ']'
  },

  // 总计的笔差异
  cntDifference: function (cnt1, cnt2) {
    var cnt = (cnt1 || 0) - (cnt2 || 0)
    if (cnt == 0) {
      return "持平"
    } else if (cnt > 0) {
      return "增长" + cnt + "笔"
    } else {
      return "下降" + cnt + "笔"
    }
  },

  // 计算支付方式笔数占比
  payWayRatio: function (total, data) {
    var ratio = '0.00'
    if (total) {
      ratio = (data / total * 100).toFixed(2)
    }
    return ratio + '%'
  },

  //盈亏数
  profitStock: function (data) {
    var profitNumber = 0
    var lossNumber = 0
    for (var i = 0; i < data.length; i++) {
      if (data[i].profitType == 0) {
        profitNumber += data[i].profitStock
      } else if (data[i].profitType == 1) {
        lossNumber += data[i].profitStock
      }
    }
    return profitNumber + lossNumber
  },

  // 金额保留两位小数
  moneyStr: function (sum) {
    return sum.toFixed(2)
  },

  //会员统计结算金额
  totalTradeAmt: function (data, type) {
    if (type == "wechat") {
      return Number((data.wechatTradeAmt - data.wechatTradeFee).toFixed(2))
    } else if (type == "alipay") {
      return Number((data.alipayTradeAmt - data.alipayTradeFee).toFixed(2))
    } else {
      return Number((data.wechatTradeAmt + data.alipayTradeAmt - data.totalTradeFee).toFixed(2))
    }

  },

  //统计进货数和进货总金额
  getTotalSum: function (list) {
    var stockNum = 0
    for (var i = 0; i < list.length; i++) {
      var item = list[i]
      stockNum += item.stockSum || item.stock || item.purchaseCnt
    }
    return stockNum
  },

  //遍历数据
  attributesData: function (data) {
    var str = ''
    if (data.length>0) {
      for (var i = 0; i < data.length; i++) {
        item = data[i]
        str += item.value || item.materialName + '*' + item.materialCount+'   '
      }
    }
    console.log(str)
    return str
  },

  //外卖商品字符串
  goodsListStr: function (data) {
    var str = ''
    for (var i = 0; i < data.length; i++) {
      item = data[i]
      str += item.goodsName + '*' + item.goodsQuantity + '    '
    }
    return str
  }

}